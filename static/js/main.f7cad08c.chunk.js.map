{"version":3,"sources":["components/ProductItem.js","components/ProductSearchControl.js","components/Pagination.js","App.js","actions/index.js","actions/actionTypes.js","serviceWorker.js","reducers/products.js","reducers/search.js","reducers/index.js","index.js"],"names":["ProductItem","this","props","product","index","className","name","id","Component","ProductSearchControl","onHandleChange","event","target","value","setState","onSearch","e","preventDefault","state","keyword","onClearSearch","showSearchInfo","nextProps","onSubmit","type","placeholder","onChange","onClick","Pagination","totalRecords","pageLimit","totalPages","currentPage","initialPage","pagesToShow","Math","ceil","prevProps","prevState","setPage","page","startIndex","endIndex","min","onChangePage","startFromNumber","pages","floor","i","push","pager","getPager","disabled","map","key","App","showProducts","products","result","length","onSearchProduct","data","rowsPerPage","filter","toLowerCase","indexOf","slice","parseInt","connect","search","dispatch","actSearchProduct","Boolean","window","location","hostname","match","initialState","action","appReducers","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wRAiBeA,E,iLAdH,IAAD,EACkBC,KAAKC,MAAxBC,EADC,EACDA,QAASC,EADR,EACQA,MAEf,OACE,4BACE,wBAAIC,UAAU,yBAAyBD,EAAQ,GAC/C,wBAAIC,UAAU,YACXF,EAAQG,KADX,QACsBH,EAAQI,GAD9B,U,GAPkBC,a,QCkFXC,E,YAjFb,WAAYP,GAAQ,IAAD,8BACjB,4CAAMA,KAgBRQ,eAAiB,SAAAC,GACf,IAAIC,EAASD,EAAMC,OACfN,EAAOM,EAAON,KACdO,EAAQD,EAAOC,MACnB,EAAKC,SAAL,eACGR,EAAOO,KAtBO,EA0BnBE,SAAW,SAAAC,GACTA,EAAEC,iBACF,EAAKf,MAAMa,SAAS,EAAKG,MAAMC,UA5Bd,EA+BnBC,cAAgB,WACd,EAAKlB,MAAMa,SAAS,IACpB,EAAKD,SAAS,CACZK,QAAS,GACTE,gBAAgB,KAjClB,EAAKH,MAAQ,CACXC,QAAS,GACTE,gBAAgB,GAJD,E,uFAQOC,GACpBA,GAAaA,EAAUH,SACzBlB,KAAKa,SAAS,CACZK,QAASG,EAAUH,QACnBE,gBAAgB,M,+BA4BpB,OACE,yBAAKhB,UAAU,wBACb,0BAAMkB,SAAUtB,KAAKc,UACnB,yBAAKV,UAAU,oBACb,yBAAKA,UAAU,eACb,2BACEmB,KAAK,OACLlB,KAAK,UACLD,UAAU,eACVoB,YAAY,aACZZ,MAAOZ,KAAKiB,MAAMC,QAClBO,SAAUzB,KAAKS,iBAEjB,0BAAML,UAAU,mBACd,4BACEA,UAAU,kBACVmB,KAAK,SACLG,QAAS1B,KAAKc,UAEd,uBAAGV,UAAU,sBALf,kBAUJ,4BACEmB,KAAK,SACLnB,UAAU,4BACVsB,QAAS1B,KAAKmB,eAEd,uBAAGf,UAAU,kBAGjB,yBAAKA,UAAYJ,KAAKiB,MAAMG,eAA4B,GAAX,UAA7C,wBACQ,gCAASpB,KAAKiB,MAAMC,SAD5B,W,GAzEyBX,aC4LpBoB,E,YA1Lb,WAAY1B,GAAQ,IAAD,8BACjB,4CAAMA,KACDgB,MAAQ,CACXW,aAAc,GACdC,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,YAAa,GACbC,YAAa,IARE,E,iFAuBjBjC,KAAKa,SAAS,CACZe,aAAc5B,KAAKC,MAAM2B,aACzBC,UAAW7B,KAAKC,MAAM4B,WAAa,GACnCC,WAAYI,KAAKC,KAAKnC,KAAKC,MAAM2B,aAAe5B,KAAKC,MAAM4B,WAC3DI,YAAajC,KAAKC,MAAMgC,aAAe,EACvCF,YAAa/B,KAAKC,MAAM+B,aAAe,M,gDAIjBX,GAExBrB,KAAKa,SAAS,CACZe,aAAcP,EAAUO,aACxBC,UAAWR,EAAUQ,WAAa,GAClCC,WAAYI,KAAKC,KAAKd,EAAUO,aAAeP,EAAUQ,WACzDI,YAAaZ,EAAUY,aAAe,M,yCAIvBG,EAAWC,GAG1BrC,KAAKiB,MAAMW,eAAiBS,EAAUT,cACtC5B,KAAKiB,MAAMY,YAAcQ,EAAUR,WAEnC7B,KAAKsC,QAAQtC,KAAKiB,MAAMc,e,8BAIpBQ,GAAO,IAAD,EACkCvC,KAAKiB,MAA7CW,EADM,EACNA,aAAcC,EADR,EACQA,UAAWC,EADnB,EACmBA,WAO3BS,EAAO,EACTA,EAAO,EACEA,EAAOT,IAChBS,EAAOT,GAGT9B,KAAKa,SAAS,CACZkB,YAAaQ,IAWf,IAAIC,GAAcD,EAAO,GAAKV,EAC1BY,EAAWP,KAAKQ,IAAIF,EAAaX,EAAY,EAAGD,EAAe,GAEnE5B,KAAKC,MAAM0C,aAAa,CACtBd,YACAC,aACAS,OACAC,aACAC,e,iCAIQ,IAGRG,EAHO,EACsC5C,KAAKiB,MAA9CgB,EADG,EACHA,YAAaF,EADV,EACUA,YAAaD,EADvB,EACuBA,WAC5Be,EAAQ,GAGRf,GAAcG,GAChBW,EAAkB,EAClBX,EAAcH,GAGZc,EADEb,GAAeG,KAAKC,KAAKF,EAAc,GACvB,EAElBF,EAAcG,KAAKY,OAAOb,EAAc,GAAK,IAC7CH,EAEkBA,GAAcG,EAAc,GAE5BF,EAAcG,KAAKY,MAAMb,EAAc,GAI7D,IAAK,IAAIc,EAAI,EAAGA,GAAKd,EAAac,IAChCF,EAAMG,KAAKJ,KAGb,MAAO,CACLb,cACAD,aACAe,W,+BAIM,IAAD,OAEP,IAAK7C,KAAKiB,MAAMW,cAA0C,IAA1B5B,KAAKiB,MAAMa,WAAkB,OAAO,KAEpE,IAAImB,EAAQjD,KAAKkD,WAGjB,OACE,wBAAI9C,UAAU,cACZ,4BACE,4BACE+C,SAAgC,IAAtBF,EAAMlB,YAChBL,QAAS,kBAAM,EAAKY,QAAQ,KAF9B,6BAOF,4BACE,4BACEa,SAAgC,IAAtBF,EAAMlB,YAChBL,QAAS,kBAAM,EAAKY,QAAQW,EAAMlB,YAAc,KAFlD,uBAODkB,EAAMJ,MAAMO,KAAI,SAACb,EAAMpC,GAAP,OACf,wBAAIkD,IAAKlD,GACP,4BACEC,UAAW6C,EAAMlB,cAAgBQ,EAAO,SAAW,GACnDb,QAAS,kBAAM,EAAKY,QAAQC,KAE3BA,OAIP,4BACE,4BACEY,SAAUF,EAAMlB,cAAgBkB,EAAMnB,WACtCJ,QAAS,kBAAM,EAAKY,QAAQW,EAAMlB,YAAc,KAFlD,iBAOF,4BACE,4BACEoB,SAAUF,EAAMlB,cAAgBkB,EAAMnB,WACtCJ,QAAS,kBAAM,EAAKY,QAAQW,EAAMnB,cAFpC,4B,GAvKevB,aCOnB+C,E,YACJ,WAAYrD,GAAQ,IAAD,8BACjB,4CAAMA,KAyBRsD,aAAe,SAAAC,GACb,IAAIC,EAAS,KAMb,OALID,EAASE,OAAS,IACpBD,EAASD,EAASJ,KAAI,SAAClD,EAASC,GAC9B,OAAO,kBAAC,EAAD,CAAakD,IAAKlD,EAAOD,QAASA,EAASC,MAAOA,QAGtDsD,GAjCU,EAoCnB3C,SAAW,SAAAI,GACT,EAAKjB,MAAM0D,gBAAgBzC,IArCV,EAwCnByB,aAAe,SAAAiB,GACb,EAAK/C,SAAS,CACZgB,UAAW+B,EAAK/B,UAChBC,WAAY8B,EAAK9B,WACjBC,YAAa6B,EAAKrB,KAClBC,WAAYoB,EAAKpB,WACjBC,SAAUmB,EAAKnB,YA3CjB,EAAKxB,MAAQ,CACXW,aAAc,GACdE,WAAY,GACZD,UAAW,GACXE,YAAa,GACbS,WAAY,GACZC,SAAU,IATK,E,iFAejBzC,KAAKa,SAAS,CACZe,aAAc5B,KAAKC,MAAMuD,SAASE,W,+BAkC5B,IASJG,EATG,SACqB7D,KAAKC,MAA3BiB,EADC,EACDA,QAASsC,EADR,EACQA,SADR,EAQHxD,KAAKiB,MALPa,EAHK,EAGLA,WACAC,EAJK,EAILA,YACAF,EALK,EAKLA,UACAW,EANK,EAMLA,WACAC,EAPK,EAOLA,SAaF,OARIvB,IACFsC,EAAWA,EAASM,QAAO,SAAA5D,GACzB,OAAwD,IAAjDA,EAAQG,KAAK0D,cAAcC,QAAQ9C,OAI9C2C,EAAcL,EAASS,MAAMzB,EAAYC,EAAW,GAGlD,kBAAC,WAAD,KACE,yBAAKrC,UAAU,4BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,CACEU,SAAUd,KAAKc,SACfI,QAASlB,KAAKC,MAAMiB,UAEtB,yBAAKd,UAAU,kCAAf,2BAEE,4BACEA,UAAU,eACVQ,MAAOiB,EACPJ,SAAU,SAAAV,GAAC,OACT,EAAKF,SAAS,CAAEgB,UAAWqC,SAASnD,EAAEJ,OAAOC,WAG/C,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,IAAf,UAKR,yBAAKR,UAAU,gBACb,2BAAOA,UAAU,oCACf,+BACE,4BACE,wBAAIA,UAAU,eAAd,UACA,wBAAIA,UAAU,eAAd,gBAGJ,+BAAQJ,KAAKuD,aAAaM,MAG9B,yBAAKzD,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,4CACb,qCACKoD,EAASE,OADd,mBAC4B3B,EAD5B,IAC0CD,IAG5C,yBAAK1B,UAAU,yBACb,kBAAC,EAAD,CACEwB,aAAc4B,EAASE,OACvB7B,UAAWA,GAAa,EACxBG,YAAa,EACbC,YAAa,EACbU,aAAc3C,KAAK2C,yB,GAzHrBpC,aA+JH4D,eAfS,SAAAlD,GACtB,MAAO,CACLuC,SAAUvC,EAAMuC,SAChBtC,QAASD,EAAMmD,WAIQ,SAACC,EAAUpE,GACpC,MAAO,CACL0D,gBAAiB,SAAAzC,GACfmD,EChK0B,SAAAnD,GAC5B,MAAO,CACHK,KCNc,SDOdL,WD6JOoD,CAAiBpD,QAKjBiD,CAGbb,GGhKkBiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mBCdAC,EAAe,CACjB,CAAEtE,GAAI,EAAGD,KAAM,wBACjB,CAAEC,GAAI,EAAGD,KAAM,6BACf,CAAEC,GAAI,EAAGD,KAAM,2BACf,CAAEC,GAAI,EAAGD,KAAM,6BACf,CAAEC,GAAI,EAAGD,KAAM,+BACf,CAAEC,GAAI,EAAGD,KAAM,uBACf,CAAEC,GAAI,EAAGD,KAAM,kCACf,CAAEC,GAAI,EAAGD,KAAM,4BACf,CAAEC,GAAI,EAAGD,KAAM,wBACf,CAAEC,GAAI,GAAID,KAAM,4BAChB,CAAEC,GAAI,GAAID,KAAM,uBAChB,CAAEC,GAAI,GAAID,KAAM,wBAChB,CAAEC,GAAI,GAAID,KAAM,gBAChB,CAAEC,GAAI,GAAID,KAAM,gCAChB,CAAEC,GAAI,GAAID,KAAM,8BAChB,CAAEC,GAAI,GAAID,KAAM,8BAChB,CAAEC,GAAI,GAAID,KAAM,oCAChB,CAAEC,GAAI,GAAID,KAAM,0BAChB,CAAEC,GAAI,GAAID,KAAM,yBAChB,CAAEC,GAAI,GAAID,KAAM,+BAChB,CAAEC,GAAI,GAAID,KAAM,6BAChB,CAAEC,GAAI,GAAID,KAAM,uBAChB,CAAEC,GAAI,GAAID,KAAM,uBAChB,CAAEC,GAAI,GAAID,KAAM,6BAChB,CAAEC,GAAI,GAAID,KAAM,+BAChB,CAAEC,GAAI,GAAID,KAAM,qCAChB,CAAEC,GAAI,GAAID,KAAM,wCAChB,CAAEC,GAAI,GAAID,KAAM,kCAChB,CAAEC,GAAI,GAAID,KAAM,8BAChB,CAAEC,GAAI,GAAID,KAAM,+BAChB,CAAEC,GAAI,GAAID,KAAM,aAChB,CAAEC,GAAI,GAAID,KAAM,mBAChB,CAAEC,GAAI,GAAID,KAAM,sBAChB,CAAEC,GAAI,GAAID,KAAM,sBAChB,CAAEC,GAAI,GAAID,KAAM,sCAChB,CAAEC,GAAI,GAAID,KAAM,YAChB,CAAEC,GAAI,GAAID,KAAM,2BAChB,CAAEC,GAAI,GAAID,KAAM,+BAChB,CAAEC,GAAI,GAAID,KAAM,gCAChB,CAAEC,GAAI,GAAID,KAAM,8BAChB,CAAEC,GAAI,GAAID,KAAM,wCAChB,CAAEC,GAAI,GAAID,KAAM,oCAChB,CAAEC,GAAI,GAAID,KAAM,8BAChB,CAAEC,GAAI,GAAID,KAAM,oCAChB,CAAEC,GAAI,GAAID,KAAM,4BAChB,CAAEC,GAAI,GAAID,KAAM,yBAChB,CAAEC,GAAI,GAAID,KAAM,6BAChB,CAAEC,GAAI,GAAID,KAAM,oCAChB,CAAEC,GAAI,GAAID,KAAM,mCAChB,CAAEC,GAAI,GAAID,KAAM,gCAChB,CAAEC,GAAI,GAAID,KAAM,0BAChB,CAAEC,GAAI,GAAID,KAAM,kBAChB,CAAEC,GAAI,GAAID,KAAM,mBAChB,CAAEC,GAAI,GAAID,KAAM,mBAChB,CAAEC,GAAI,GAAID,KAAM,4BAChB,CAAEC,GAAI,GAAID,KAAM,6BAChB,CAAEC,GAAI,GAAID,KAAM,wBAChB,CAAEC,GAAI,GAAID,KAAM,uBAChB,CAAEC,GAAI,GAAID,KAAM,0BAChB,CAAEC,GAAI,GAAID,KAAM,mBAChB,CAAEC,GAAI,GAAID,KAAM,0BAChB,CAAEC,GAAI,GAAID,KAAM,wBAChB,CAAEC,GAAI,GAAID,KAAM,kBAChB,CAAEC,GAAI,GAAID,KAAM,0BAChB,CAAEC,GAAI,GAAID,KAAM,+BAChB,CAAEC,GAAI,GAAID,KAAM,iBAChB,CAAEC,GAAI,GAAID,KAAM,mBAChB,CAAEC,GAAI,GAAID,KAAM,mBAChB,CAAEC,GAAI,GAAID,KAAM,kBAChB,CAAEC,GAAI,GAAID,KAAM,mBAChB,CAAEC,GAAI,GAAID,KAAM,kBAChB,CAAEC,GAAI,GAAID,KAAM,kBAChB,CAAEC,GAAI,GAAID,KAAM,uBAChB,CAAEC,GAAI,GAAID,KAAM,uBAChB,CAAEC,GAAI,GAAID,KAAM,uBAChB,CAAEC,GAAI,GAAID,KAAM,uBAChB,CAAEC,GAAI,GAAID,KAAM,qBAChB,CAAEC,GAAI,GAAID,KAAM,mBAChB,CAAEC,GAAI,GAAID,KAAM,eAChB,CAAEC,GAAI,GAAID,KAAM,eAChB,CAAEC,GAAI,GAAID,KAAM,eAChB,CAAEC,GAAI,GAAID,KAAM,eAChB,CAAEC,GAAI,GAAID,KAAM,eAChB,CAAEC,GAAI,GAAID,KAAM,eAChB,CAAEC,GAAI,GAAID,KAAM,0BAChB,CAAEC,GAAI,GAAID,KAAM,mBAUHmD,EAPE,WAAmC,IAAlCvC,EAAiC,uDAAzB2D,EAAcC,EAAW,uCAGvC,OAFDA,EAAOtD,KAEC,YAAIN,ICjFRmD,EATA,WAAiC,IAAhCnD,EAA+B,uDAF1B,GAEe4D,EAAW,uCAC3C,OAAOA,EAAOtD,MACV,IHRc,SGSV,OAAOsD,EAAO3D,QAClB,QACI,OAAOD,ICAJ6D,EALKC,YAAgB,CAChCvB,WACAY,W,QCGEY,EAAkBR,OAAOS,sCAAwCC,IAEjEC,EAAQC,YAAYN,EAAaE,EAAgBK,YAAgBC,OAEjEC,EACF,kBAAC,IAAD,CAAUJ,MAAOA,GACb,kBAAC,EAAD,OAIRK,IAASC,OAAOF,EAAKG,SAASC,eAAe,SJ8GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f7cad08c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass ProductItem extends Component {\n  render() {\n    var { product, index } = this.props;\n\n    return (\n      <tr>\n        <td className=\"col_order text-center\">{index + 1}</td>\n        <td className=\"col_name\">\n          {product.name} (id={product.id})\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default ProductItem;\n","import React, { Component } from \"react\";\n\nclass ProductSearchControl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: \"\",\n      showSearchInfo: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps && nextProps.keyword) {\n      this.setState({\n        keyword: nextProps.keyword,\n        showSearchInfo: true\n      });\n    }\n  }\n\n  onHandleChange = event => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  onSearch = e => {\n    e.preventDefault();\n    this.props.onSearch(this.state.keyword);\n  };\n\n  onClearSearch = () => {\n    this.props.onSearch(\"\");\n    this.setState({\n      keyword: \"\",\n      showSearchInfo: false\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"col-xs-12 box_search\">\n        <form onSubmit={this.onSearch}>\n          <div className=\"search_wrp mb-15\">\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                name=\"keyword\"\n                className=\"form-control\"\n                placeholder=\"Phone Name\"\n                value={this.state.keyword}\n                onChange={this.onHandleChange}\n              />\n              <span className=\"input-group-btn\">\n                <button\n                  className=\"btn btn-primary\"\n                  type=\"button\"\n                  onClick={this.onSearch}\n                >\n                  <i className=\"fa fa-search mr-5\" />\n                  검색\n                </button>\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn_clear\"\n              onClick={this.onClearSearch}\n            >\n              <i className=\"fa fa-close\" />\n            </button>\n          </div>\n          <div className={!this.state.showSearchInfo ? \"hidden\" : \"\"}>\n            검색중: \"<strong>{this.state.keyword}</strong>\"\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ProductSearchControl;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalRecords: \"\",\n      pageLimit: \"\",\n      totalPages: \"\",\n      currentPage: \"\",\n      initialPage: \"\",\n      pagesToShow: \"\"\n    };\n  }\n\n/**\n * totalRecords: 모든 게시물 갯수\n * pageLimit: 한번에 몇개의 개시물을 보여줄건지\n * totalPages: 총 페이지 수\n * currentPage: 현재 페이지\n * initialPage: 첫 페이지\n * pagesToShow: 페이지네이션에 몇개의 페이지 수 보여줄건지\n */\n\n  componentDidMount() {\n    // 첫 렌더링 끝나고\n    this.setState({\n      totalRecords: this.props.totalRecords,\n      pageLimit: this.props.pageLimit || 10,\n      totalPages: Math.ceil(this.props.totalRecords / this.props.pageLimit),\n      pagesToShow: this.props.pagesToShow || 5,\n      currentPage: this.props.initialPage || 1\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // component가 새로 prop을 받았을 때 실행됨\n    this.setState({\n      totalRecords: nextProps.totalRecords,\n      pageLimit: nextProps.pageLimit || 10,\n      totalPages: Math.ceil(nextProps.totalRecords / nextProps.pageLimit),\n      pagesToShow: nextProps.pagesToShow || 5\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // render()를 호출하고 난 다음에 발생\n    if (\n      this.state.totalRecords !== prevState.totalRecords ||\n      this.state.pageLimit !== prevState.pageLimit\n    ) {\n      this.setPage(this.state.currentPage);\n    }\n  }\n\n  setPage(page) {\n    var { totalRecords, pageLimit, totalPages } = this.state;\n\n    /**1. page가 1개밖에 없으면 page = 1\n     * 2. page > 총 페이지수 => page = totalPages\n     * [그리고 현재페이지를 page로 바꿈 => currentPage: page]\n     */\n\n    if (page < 1) {\n      page = 1;\n    } else if (page > totalPages) {\n      page = totalPages;\n    }\n\n    this.setState({\n      currentPage: page\n    });\n\n    /**startIndex와 endIndex는 [] 안에서 움직일 것이라서\n     * 0부터 시작한다는 점을 이용해서\n     * -1을 빼줌\n     *\n     * 1. startIndex는 (현재페이지 - 1) * 페이지 내의 게시물의 수\n     * 2. endIndex는 최소값[(startIndex + 페이지 내의 게시물 수 - 1) or (총 게시물 수 - 1)]\n     */\n\n    var startIndex = (page - 1) * pageLimit;\n    var endIndex = Math.min(startIndex + pageLimit - 1, totalRecords - 1);\n\n    this.props.onChangePage({\n      pageLimit,\n      totalPages,\n      page,\n      startIndex,\n      endIndex\n    });\n  }\n\n  getPager() {\n    var { pagesToShow, currentPage, totalPages } = this.state;\n    var pages = [],\n      startFromNumber;\n\n    if (totalPages <= pagesToShow) {\n      startFromNumber = 1;\n      pagesToShow = totalPages;\n    } else {\n      if (currentPage <= Math.ceil(pagesToShow / 2)) {\n        startFromNumber = 1;\n      } else if (\n        currentPage + Math.floor((pagesToShow - 1) / 2) >=\n        totalPages\n      ) {\n        startFromNumber = totalPages - (pagesToShow - 1);\n      } else {\n        startFromNumber = currentPage - Math.floor(pagesToShow / 2);\n      }\n    }\n\n    for (let i = 1; i <= pagesToShow; i++) {\n      pages.push(startFromNumber++);\n    }\n\n    return {\n      currentPage,\n      totalPages,\n      pages\n    };\n  }\n\n  render() {\n    // console.log(this.state);\n    if (!this.state.totalRecords || this.state.totalPages === 1) return null;\n\n    var pager = this.getPager();\n    // console.log(pager);\n\n    return (\n      <ul className=\"pagination\">\n        <li>\n          <button\n            disabled={pager.currentPage === 1 ? true : false}\n            onClick={() => this.setPage(1)}\n          >\n            맨앞으로\n          </button>\n        </li>\n        <li>\n          <button\n            disabled={pager.currentPage === 1 ? true : false}\n            onClick={() => this.setPage(pager.currentPage - 1)}\n          >\n            앞으로\n          </button>\n        </li>\n        {pager.pages.map((page, index) => (\n          <li key={index}>\n            <button\n              className={pager.currentPage === page ? \"active\" : \"\"}\n              onClick={() => this.setPage(page)}\n            >\n              {page}\n            </button>\n          </li>\n        ))}\n        <li>\n          <button\n            disabled={pager.currentPage === pager.totalPages ? true : false}\n            onClick={() => this.setPage(pager.currentPage + 1)}\n          >\n            뒤로\n          </button>\n        </li>\n        <li>\n          <button\n            disabled={pager.currentPage === pager.totalPages ? true : false}\n            onClick={() => this.setPage(pager.totalPages)}\n          >\n            맨뒤로\n          </button>\n        </li>\n      </ul>\n    );\n  }\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  initialPage: PropTypes.number,\n  pagesToShow: PropTypes.number,\n  onChangePage: PropTypes.func\n};\n\nexport default Pagination;\n\n// //===>example pagesToShow=5\n// if (totalPages <= 5) {\n// \t// less than 5 total pages so show all\n// \tstartPage = 1;\n// } else {\n// \t// more than 5 total pages so calculate start and end pages\n// \tif (currentPage <= 3) {\n// \t\tstartPage = 1;\n// \t} else if (currentPage + 2 >= totalPages) {\n// \t\tstartPage = totalPages - 4;\n// \t} else {\n// \t\tstartPage = currentPage - 2;\n// \t}\n// }\n\n// //===>example pagesToShow=6\n// // console.log(totalPages);\n// if (totalPages <= 6) {\n// \t// less than 6 total pages so show all\n// \tstartPage = 1;\n// } else {\n// \t// more than 5 total pages so calculate start and end pages\n// \tif (currentPage <= 3) {\n// \t\tstartPage = 1;\n// \t} else if (currentPage + 2 >= totalPages) {\n// \t\tstartPage = totalPages - 5;\n// \t} else {\n// \t\tstartPage = currentPage - 3;\n// \t}\n// }\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ProductItem from \"./components/ProductItem\";\nimport ProductSearchControl from \"./components/ProductSearchControl\";\nimport Pagination from \"./components/Pagination\";\nimport { actSearchProduct } from \"./actions/index\";\n\n// ----------------------------------------\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      totalRecords: \"\",\n      totalPages: \"\",\n      pageLimit: \"\",\n      currentPage: \"\",\n      startIndex: \"\",\n      endIndex: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // this.props.fetchAllProducts();\n    this.setState({\n      totalRecords: this.props.products.length\n    });\n  }\n\n  // componentWillReceiveProps(nextProps) {\n  //   this.setState({\n  //     totalRecords: nextProps.products.length\n  //   });\n  // }\n\n  showProducts = products => {\n    var result = null;\n    if (products.length > 0) {\n      result = products.map((product, index) => {\n        return <ProductItem key={index} product={product} index={index} />;\n      });\n    }\n    return result;\n  };\n\n  onSearch = keyword => {\n    this.props.onSearchProduct(keyword);\n  };\n\n  onChangePage = data => {\n    this.setState({\n      pageLimit: data.pageLimit,\n      totalPages: data.totalPages,\n      currentPage: data.page,\n      startIndex: data.startIndex,\n      endIndex: data.endIndex\n    });\n  };\n\n  render() {\n    var { keyword, products } = this.props;\n    var {\n      totalPages,\n      currentPage,\n      pageLimit,\n      startIndex,\n      endIndex\n    } = this.state;\n    var rowsPerPage = [];\n\n    // Tìm kiếm\n    if (keyword) {\n      products = products.filter(product => {\n        return product.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n\n    rowsPerPage = products.slice(startIndex, endIndex + 1);\n\n    return (\n      <Fragment>\n        <div className=\"section product_list_mng\">\n          <div className=\"container-fluid\">\n            <div className=\"box_product_control mb-15\">\n              <div className=\"row\">\n                <ProductSearchControl\n                  onSearch={this.onSearch}\n                  keyword={this.props.keyword}\n                />\n                <div className=\"col-xs-12 box_change_pagelimit\">\n                  나열갯수\n                  <select\n                    className=\"form-control\"\n                    value={pageLimit}\n                    onChange={e =>\n                      this.setState({ pageLimit: parseInt(e.target.value) })\n                    }\n                  >\n                    <option value={4}>4</option>\n                    <option value={8}>8</option>\n                    <option value={12}>12</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"box_tbl_list\">\n              <table className=\"table table-bordered table-hover\">\n                <thead>\n                  <tr>\n                    <th className=\"text-center\">Number</th>\n                    <th className=\"text-center\">Phone Name</th>\n                  </tr>\n                </thead>\n                <tbody>{this.showProducts(rowsPerPage)}</tbody>\n              </table>\n            </div>\n            <div className=\"box_pagination\">\n              <div className=\"row\">\n                <div className=\"col-xs-12 box_pagination_info text-right\">\n                  <p>\n                    총 {products.length} | 현재 {currentPage}/{totalPages}\n                  </p>\n                </div>\n                <div className=\"col-xs-12 text-center\">\n                  <Pagination\n                    totalRecords={products.length}\n                    pageLimit={pageLimit || 5}\n                    initialPage={1}\n                    pagesToShow={5}\n                    onChangePage={this.onChangePage}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  keyword: PropTypes.string,\n  onSearchProduct: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products,\n    keyword: state.search\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onSearchProduct: keyword => {\n      dispatch(actSearchProduct(keyword));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// src/actions/index.js\n\nimport * as Types from './actionTypes';\n\nexport const actSearchProduct = keyword => {\n    return {\n        type: Types.SEARCH,\n        keyword\n    };\n};","export const SEARCH = \"SEARCH\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// src/reducers/products.js\n\nimport * as Types from '../actions/actionTypes.js';\n\nconst initialState = [\n    { id: 1, name: \"Apple IPhone 7 128GB\" },\n  { id: 2, name: \"Nokia 105 Single Sim 2017\" },\n  { id: 3, name: \"Xiaomi Redmi 5 2GB/16GB\" },\n  { id: 4, name: \"Apple IPhone Xs Max 256GB\" },\n  { id: 5, name: \"Samsung Galaxy J2 Prime 8GB\" },\n  { id: 6, name: \"Nokia 8110 4G 2 Sim\" },\n  { id: 7, name: \"Samsung Galaxy J6 32GB Ram 3GB\" },\n  { id: 8, name: \"Apple IPhone 8 Plus 64GB\" },\n  { id: 9, name: \"Apple IPhone XR 64GB\" },\n  { id: 10, name: \"Xiaomi Redmi 6A 2GB/16GB\" },\n  { id: 11, name: \"Apple IPhone 6 32GB\" },\n  { id: 12, name: \"Apple IPhone X 256GB\" },\n  { id: 13, name: \"Nokia 5 16GB\" },\n  { id: 14, name: \"Samsung Galaxy S8 Plus G955F\" },\n  { id: 15, name: \"Samsung Galaxy J8 3GB/32GB\" },\n  { id: 16, name: \"Nokia X5 2018 32GB Ram 3GB\" },\n  { id: 17, name: \"Sony Xperia XZ Dual SIM 3GB/64GB\" },\n  { id: 18, name: \"Sony Xperia L2 (H4331)\" },\n  { id: 19, name: \"Sony Xperia XA3 Ultra\" },\n  { id: 20, name: \"Samsung Galaxy Note 9 512GB\" },\n  { id: 21, name: \"Apple IPhone 6S Plus 32GB\" },\n  { id: 22, name: \"Apple IPhone 8 64GB\" },\n  { id: 23, name: \"Apple IPhone 7 32GB\" },\n  { id: 24, name: \"Apple IPhone 7 Plus 128GB\" },\n  { id: 25, name: \"Samsung Galaxy J4+ 2GB/16GB\" },\n  { id: 26, name: \"Samsung Galaxy A7 (2018) 4GB/64GB\" },\n  { id: 27, name: \"Samsung Galaxy A6 Plus 2018 4GB/32GB\" },\n  { id: 28, name: \"Samsung Galaxy Note 8 6GB/64GB\" },\n  { id: 29, name: \"Samsung Galaxy J3 Pro 2017\" },\n  { id: 30, name: \"Samsung Galaxy S9 Plus 64GB\" },\n  { id: 31, name: \"Nokia 216\" },\n  { id: 32, name: \"Nokia 3310 2017\" },\n  { id: 33, name: \"Nokia 230 Dual SIM\" },\n  { id: 34, name: \"Nokia 150 Dual SIM\" },\n  { id: 35, name: \"Nokia 2 (TA-1029) 1GB/8GB Dual SIM\" },\n  { id: 36, name: \"Nokia 1 \" },\n  { id: 37, name: \"Nokia 5.1 Plus 3GB/32GB\" },\n  { id: 38, name: \"Nokia 7 Plus 2 Sim 4GB/64GB\" },\n  { id: 39, name: \"Nokia 6.1 Plus 4GB/64GB Xanh\" },\n  { id: 40, name: \"Nokia X6 2018 64GB Ram 4GB\" },\n  { id: 41, name: \"Xiaomi Redmi Note 5 Pro 32GB Ram 3GB\" },\n  { id: 42, name: \"Xiaomi Mi 8 Lite 4GB/64GB Xám\" },\n  { id: 43, name: \"Xiaomi Mi A2 Lite 4GB/64GB\" },\n  { id: 44, name: \"Xiaomi Redmi 5 Plus 64GB Ram 4GB\" },\n  { id: 45, name: \"Xiaomi Redmi 4X 3GB/32GB\" },\n  { id: 46, name: \"Xiaomi Mi A1 4GB/32GB\" },\n  { id: 47, name: \"Xiaomi Mi 6X 64GB Ram 6GB\" },\n  { id: 48, name: \"Xiaomi Redmi Note 6 Pro 3GB/32GB\" },\n  { id: 49, name: \"Xiaomi Redmi 6 Pro 32GB Ram 3GB\" },\n  { id: 50, name: \"Xiaomi Mi Max 3 64GB Ram 4GB\" },\n  { id: 51, name: \"Sony Xperia L1 - G3312\" },\n  { id: 52, name: \"Sony Xperia L3\" },\n  { id: 53, name: \"Sony Xperia XZ4\" },\n  { id: 54, name: \"Sony Xperia XZs\" },\n  { id: 55, name: \"Sony Xperia M4 Aqua Dual\" },\n  { id: 56, name: \"Sony Xperia C5 Ultra Dual\" },\n  { id: 57, name: \"Sony Xperia XA1 Plus\" },\n  { id: 58, name: \"Sony Xperia M5 Dual\" },\n  { id: 59, name: \"Sony Xperia Z5 Premium\" },\n  { id: 60, name: \"Sony Xperia XA1\" },\n  { id: 61, name: \"Sony Xperia Z5 compact\" },\n  { id: 62, name: \"Sony Xperia XA Ultra\" },\n  { id: 63, name: \"Sony Xperia XA\" },\n  { id: 64, name: \"Sony Xperia XZ Premium\" },\n  { id: 65, name: \"Sony Xperia C4 Dual (E5333)\" },\n  { id: 66, name: \"Sony Xperia X\" },\n  { id: 67, name: \"Sony Xperia XZ1\" },\n  { id: 68, name: \"Sony Xperia XZ2\" },\n  { id: 69, name: \"Sony Xperia Z1\" },\n  { id: 70, name: \"Xiaomi Redmi 1S\" },\n  { id: 71, name: \"Xiaomi Redmi 2\" },\n  { id: 72, name: \"Xiaomi Redmi 3\" },\n  { id: 73, name: \"Xiaomi Redmi 4 16GB\" },\n  { id: 74, name: \"Xiaomi Redmi Note 2\" },\n  { id: 75, name: \"Xiaomi Redmi Note 3\" },\n  { id: 76, name: \"Xiaomi Redmi Note 4\" },\n  { id: 77, name: \"Xiaomi Mi A1 64GB\" },\n  { id: 78, name: \"Xiaomi Mi Mix 2\" },\n  { id: 79, name: \"Xiaomi Mi 2\" },\n  { id: 80, name: \"Xiaomi Mi 3\" },\n  { id: 81, name: \"Xiaomi Mi 4\" },\n  { id: 82, name: \"Xiaomi Mi 5\" },\n  { id: 83, name: \"Xiaomi Mi 6\" },\n  { id: 84, name: \"Xiaomi Mi 7\" },\n  { id: 85, name: \"Samsung Galaxy A8 Star\" },\n  { id: 86, name: \"IPhone Xs 64GB\" }\n]\n\nconst products = (state = initialState, action) => {\n    switch(action.type) {\n        default:\n            return [...state];\n    }\n};\n\nexport default products;","// src/reducers/search.js\n\nimport * as Types from '../actions/actionTypes';\n\nconst initialState = \"\";\n\nconst search = (state=initialState, action) => {\n    switch(action.type) {\n        case Types.SEARCH:\n            return action.keyword;\n        default:\n            return state;\n    }\n};\n\nexport default search;","// src/reducers/index.js\n\nimport { combineReducers } from 'redux';\nimport products from './products';\nimport search from './search';\n\nconst appReducers = combineReducers({\n    products,\n    search\n});\n\nexport default appReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport appReducers from './reducers/index';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(appReducers, composeEnhancer(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}